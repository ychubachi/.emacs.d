#+TITLE: config.el
#+AUTHOR: Yoshihide Chubachi

* init.el

+ このファイルからinit.elを作る方法は手動です
  - C-c C-v t (org-babel-tangle)

** ヘッダー

+ コピーライトのコメントを生成します

#+begin_src emacs-lisp :tangle "init.el"
  ;;; init.el --- My init.el  -*- lexical-binding: t; -*-
  ;; Copyright (C) 2022-2024 Yoshihide Chubachi

  ;; Author: Yoshihide Chubachi <yoshi@chubachi.net>

  ;; This program is free software: you can redistribute it and/or modify
  ;; it under the terms of the GNU General Public License as published by
  ;; the Free Software Foundation, either version 3 of the License, or
  ;; (at your option) any later version.

  ;; This program is distributed in the hope that it will be useful,
  ;; but WITHOUT ANY WARRANTY; without even the implied warranty of
  ;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ;; GNU General Public License for more details.

  ;; You should have received a copy of the GNU General Public License
  ;; along with this program.  If not, see <http://www.gnu.org/licenses/>.

  ;;; Commentary:

  ;; このファイルはinit.orgから生成します。

  ;;; Code:
#+end_src

** パッケージの設定

+ 標準パッケージとstraight.el、leafを設定

#+begin_src emacs-lisp :tangle "init.el"
  (eval-and-compile
    (prog1 "package"
      (customize-set-variable
       'package-archives '(("org" . "https://orgmode.org/elpa/")
                           ("melpa" . "https://melpa.org/packages/")
                           ("gnu" . "https://elpa.gnu.org/packages/")))
      (package-initialize))

    (prog1 "straight.el"
      (defvar bootstrap-version)
      (let ((bootstrap-file
             (expand-file-name "straight/repos/straight.el/bootstrap.el" user-emacs-directory))
            (bootstrap-version 6))
        (unless (file-exists-p bootstrap-file)
          (with-current-buffer
              (url-retrieve-synchronously
               "https://raw.githubusercontent.com/radian-software/straight.el/develop/install.el"
               'silent 'inhibit-cookies)
            (goto-char (point-max))
            (eval-print-last-sexp)))
        (load bootstrap-file nil 'nomessage)))

    (prog1 "leaf"
      (straight-use-package 'leaf)
      (straight-use-package 'leaf-keywords)
      (leaf-keywords-init)))
#+end_src

** orgを読み込む
+ タングルする前に最新バージョンに更新する

#+begin_src emacs-lisp :tangle "init.el"
(leaf org :straight t)
#+end_src

** tangle-file

+ ファイルをタングルする
  - org-babel-load-fileの方が手軽
    * config.orgのすべてのコードブロックをconfig.elに出力
  - org-babel-tangle-fileだと
    * :tangleオプションを設定したコードのみ出力
  - 参考
    * https://blog.symdon.info/posts/1628301275/

#+begin_src emacs-lisp :tangle "init.el"
  (org-babel-load-file "config.org")
#+end_src

** フッター
#+begin_src emacs-lisp :tangle "init.el"
  (provide 'init.el)
  ;;; init.el ends here
#+end_src
